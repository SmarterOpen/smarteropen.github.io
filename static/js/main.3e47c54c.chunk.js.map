{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Jumbotron","fluid","src","alt","CardDeck","Card","Img","variant","Body","Title","Text","Footer","Link","href","target","Button","width","height","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e47c54c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Jumbotron, Card, CardDeck, CardColumns, Button} from 'react-bootstrap';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Jumbotron className=\"header-jumbotron\" fluid>\n            <div className=\"header-image-container\">\n              <img className=\"header-image\" src=\"/img/skyline.png\" alt=\"skyline\"/>\n              <div className=\"centered\">\n                <h1 className=\"header-text\">Welcome to Birmingham, Smarter</h1>\n                <h4 className=\"header-text\">At SmarterBham we are building an open smart city, one project at a time.</h4>\n              </div>\n            </div>\n          </Jumbotron>\n          <div>\n            <h2>About SmarterBham</h2>\n          </div>\n          <div className=\"body-section\">\n            <p>\n            Imagine a city driven by information.  A place where decision making is supported by a city-wide sensor network\n             that provides real time data about the state of things.  Imagine the platform that runs the network, \n             built and owned by the citizens, measuring the things that we think are important and giving us the insights we \n             need to make our city the best it can be.   The SmarterBham project was born out of a recognition that smart cities\n              need grassroots participation.  We can combine open hardware designs with open networks, open platforms and open data\n              policies to build a participatory smart cities future.\n            </p>\n          </div>\n          <div>\n            <h2>How to Get Involved</h2>\n          </div>\n          <div className=\"card-body\">\n            <CardDeck className=\"card-body\">\n              <Card className=\"sbham-card\">\n                <Card.Img variant=\"top\" src=\"img/groupsio.png\" />\n                <Card.Body>\n                  <Card.Title>Mailing List</Card.Title>\n                  <Card.Text>\n                    We use Groups.io to manage our mailing list.  We don't share your email without permission, and the message volume is\n                    kept to a manageable level, promise!\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Link href=\"https://groups.io/g/smarterbham\" target=\"new\"><Button variant=\"primary\">Join the List</Button></Card.Link>\n                </Card.Footer>\n              </Card>\n              <Card className=\"sbham-card\">\n                <Card.Img variant=\"top\" src=\"img/base.jpeg\" />\n                <Card.Body>\n                  <Card.Title>Meetups</Card.Title>\n                  <Card.Text>\n                    SmarterBham is proud to be part of the BASE meetup group, along with many of Birmingham's most attended events.\n                    Join BASE205 to get notified when we schedule a new meetup.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Link href=\"https://www.meetup.com/base205/\" target=\"new\"><Button variant=\"primary\">Join the Meetup</Button></Card.Link>\n                </Card.Footer>\n              </Card>\n              <Card className=\"sbham-card\">\n                <Card.Img variant=\"top\" src=\"img/github.png\" />\n                <Card.Body>\n                  <Card.Title>Resources</Card.Title>\n                  <Card.Text>\n                    We host all of our source code, device designs, project cookbooks and other assets on Github.  Feel free to fork anything\n                    you find there for use in your own city!\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Link href=\"https://github.com/SmarterOpen\" target=\"new\"><Button variant=\"primary\">Fork the Repo</Button></Card.Link>\n                </Card.Footer>\n              </Card>\n              <Card className=\"sbham-card\">\n                <Card.Img variant=\"top\" src=\"img/ttn.png\" />\n                <Card.Body>\n                  <Card.Title>Open Network</Card.Title>\n                  <Card.Text>\n                    SmarterBham is responsible for the deployment and maintenance of the Birmingham, AL Things Network community.  This community\n                    provides a free and open access LoRaWAN network that you can use for your own smart cities applications.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Link href=\"https://www.thethingsnetwork.org/community/birmingham-al/\" target=\"new\"><Button variant=\"primary\">Get Access to TTN</Button></Card.Link>\n                </Card.Footer>\n              </Card>\n              <Card className=\"sbham-card\">\n                <Card.Img variant=\"top\" src=\"img/slack.png\" />\n                <Card.Body>\n                  <Card.Title>Chat</Card.Title>\n                  <Card.Text>\n                    If email isn't your thing and you prefer more real time collaboration, we use the #SmarterBham channel on the Magic City Tech\n                    Slack as our official chat venue.  \n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Card.Link href=\"http://magiccitytech.org/\" target=\"new\"><Button variant=\"primary\">Chat on Slack</Button></Card.Link>\n                </Card.Footer>\n              </Card>\n            </CardDeck>\n          </div>\n          <div>\n            <h2>\n              Our Partners\n            </h2>\n          </div>\n          <div className=\"cards-section\">\n            <CardDeck className=\"card-body\">\n              <Card className=\"sbham-card\">\n                <a href=\"https://gaspgroup.org\"><Card.Img variant=\"top\" src=\"img/gasp.png\"/></a>\n                <Card.Body>\n                  <Card.Title>Gasp, Inc.</Card.Title>\n                  <Card.Text>\n                    Gasp's mission is to advance healthy air and environmental justice in the \n                    greater-Birmingham area through education, advocacy, and collaboration.  SmarterBham\n                    works with Gasp on air quality monitoring using the open smart cities platform.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card className=\"sbham-card\">\n                <a href=\"https://www.redmountainmakers.org/\"><Card.Img variant=\"top\" src=\"img/rmm.png\"/></a>\n                <Card.Body>\n                  <Card.Title>Red Mountain Makers</Card.Title>\n                  <Card.Text> \n                    Red Mountain Makers is a nonprofit makerspace in Birmingham Alabama dedicated to bringing a community \n                    together to learn, play, and grow in STEAM areas.  \n                    Their mission is to provide a collaborative environment that promotes discovery, \n                    creativity, and exploration of STEAM (Science, Technology, Engineering, Art, Mathematics). \n                  </Card.Text>\n                </Card.Body>\n              </Card>\n              <Card className=\"sbham-card\">\n                <a href=\"https://conserv.io/\"><Card.Img variant=\"top\" src=\"img/conserv.png\"/></a>\n                <Card.Body>\n                  <Card.Title>Conserv.io</Card.Title>\n                  <Card.Text> \n                    Conserv.io creates better tools for preservation professionals including their flagship Smart Conservation\n                    Platform, a conservation-focused, solution-as-a-service environmental monitoring solution \n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </CardDeck>\n          </div>\n          <div>\n            <h2>In The News</h2>\n          </div>\n          <div className=\"body-section\">\n            <div className=\"video-responsive\">\n              <iframe  src=\"https://player.vimeo.com/video/315325849\" width=\"640\" height=\"360\" frameBorder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowFullScreen></iframe>\n              <p><a href=\"https://vimeo.com/315325849\">Smarter Birmingham Air Quality Sensor Project</a> from <a href=\"https://vimeo.com/gaspgroup\">GASP</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}